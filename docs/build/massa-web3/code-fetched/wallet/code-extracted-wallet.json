{
  "signMessage": "    const signedMessage = await web3Client\n      .wallet()\n      .signMessage('hello', baseAccount.address as string);\n    console.log(`Signed message: ${signedMessage.base58Encoded}`);",
  "verifySignature": "    const isSignatureValid: boolean = await web3Client\n      .wallet()\n      .verifySignature(\n        'Hello world',\n        signature,\n        baseAccount.publicKey as string,\n      );\n    console.log(`isSignatureValid: ${isSignatureValid}`);",
  "buyRolls": "    const transactionDataRolls: IRollsData = {\n      fee: 0n,\n      amount: 1n,\n    };\n    const buyRollsTxId: Array<string> = await web3Client\n      .wallet()\n      .buyRolls(transactionDataRolls, deployerAccount as IAccount);\n    // Await finalization\n    console.log(`Transaction sent with id: ${buyRollsTxId}`);\n    await web3Client\n      .smartContracts()\n      .awaitRequiredOperationStatus(buyRollsTxId[0], EOperationStatus.FINAL);\n    console.log(`Transaction ${buyRollsTxId} finalized`);",
  "sellRolls": "    const sellRollsTxId: Array<string> = await web3Client\n      .wallet()\n      .sellRolls(transactionDataRolls, baseAccount as IAccount);\n    // Await finalization\n    await web3Client\n      .smartContracts()\n      .awaitRequiredOperationStatus(sellRollsTxId[0], EOperationStatus.FINAL);\n    console.log(`Transaction ${sellRollsTxId} finalized`);"
}
