"use strict";(self.webpackChunkdocu_dev=self.webpackChunkdocu_dev||[]).push([[4118],{1085:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var s=n(4848),i=n(8453);const o={id:"operation",sidebar_label:"Operation"},a="Operation",r={id:"build/web3/operation",title:"Operation",description:"The Operation object is returned when sending an operation to the Massa blockchain. It contains a variety of helper methods to check the status of the operation, wait for its execution, and retrieve associated events.",source:"@site/docs/build/web3/operation.md",sourceDirName:"build/web3",slug:"/build/web3/operation",permalink:"/docs/build/web3/operation",draft:!1,unlisted:!1,editUrl:"https://github.com/massalabs/docs/tree/main/docs/build/web3/operation.md",tags:[],version:"current",lastUpdatedBy:"Damir Vodenicarevic",lastUpdatedAt:1723580599e3,frontMatter:{id:"operation",sidebar_label:"Operation"},sidebar:"buildSidebar",previous:{title:"Wallet",permalink:"/docs/build/web3/wallet"},next:{title:"Introduction",permalink:"/docs/build/web3/contracts-wrappers/contract-wrappers-intro"}},l={},c=[{value:"Usage Example",id:"usage-example",level:2},{value:"Methods",id:"methods",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"operation",children:"Operation"})}),"\n",(0,s.jsx)(t.p,{children:"The Operation object is returned when sending an operation to the Massa blockchain. It contains a variety of helper methods to check the status of the operation, wait for its execution, and retrieve associated events."}),"\n",(0,s.jsx)(t.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,s.jsx)(t.p,{children:"Here's a basic example of how to use the Operation object:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'import { Provider, Operation } from "@massalabs/massa-web3";\n\n// Here we assume that \'provider\' is an instance of Provider\nconst operation = await provider.callSC({\n  func: targetFunction,\n  target: targetAddress,\n  caller: callerAddress,\n  parameter,\n  coins,\n  fee,\n});\n\nconst speculativeStatus = await operation.waitSpeculativeExecution();\nconsole.log("Speculative status:", speculativeStatus);\n\nconst speculativeEvents = await operation.getSpeculativeEvents();\nconsole.log("Speculative events:", speculativeEvents);\n\nconst finalStatus = await operation.waitFinalExecution();\nconsole.log("Final status:", finalStatus);\n\nconst finalEvents = await operation.getFinalEvents();\nconsole.log("Final events:", finalEvents);\n'})}),"\n",(0,s.jsx)(t.p,{children:"This example demonstrates how to create an Operation object, wait for its execution (both speculative and final) and retrieve events."}),"\n",(0,s.jsx)(t.p,{children:"Remember to handle errors appropriately in your actual implementation, as blockchain operations can fail due to various reasons such as network issues or execution errors."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"async getStatus(): Promise<OperationStatus>\n"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the current status of the operation."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Returns: A Promise that resolves to the OperationStatus of the operation."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"async waitSpeculativeExecution(timeout?: number, period?: number): Promise<OperationStatus>\n"})}),"\n",(0,s.jsx)(t.p,{children:"Waits for the operation to be included in a block (speculative execution)."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"timeout"})," (optional): The maximum time to wait (default: 60000ms)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"period"})," (optional): The time interval to check the status (default: 500ms)."]}),"\n",(0,s.jsx)(t.li,{children:"Returns: A Promise that resolves to the OperationStatus or NotFound if the timeout is reached."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"async waitFinalExecution(timeout?: number, period?: number): Promise<OperationStatus>\n"})}),"\n",(0,s.jsx)(t.p,{children:"Waits for the block containing the operation to be final."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"timeout"})," (optional): The maximum time to wait (default: 60000ms)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"period"})," (optional): The time interval to check the status (default: 500ms)."]}),"\n",(0,s.jsx)(t.li,{children:"Returns: A Promise that resolves to the OperationStatus or NotFound if the timeout is reached."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"async getFinalEvents(): Promise<SCEvent[]>\n"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the events of the operation once the block reaches the final state."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Returns: A Promise that resolves to an array of SCEvent objects."}),"\n",(0,s.jsx)(t.li,{children:"Throws an error if the operation is not found."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"async getSpeculativeEvents(): Promise<SCEvent[]>\n"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the events of the speculative execution of the operation."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Returns: A Promise that resolves to an array of SCEvent objects."}),"\n",(0,s.jsx)(t.li,{children:"Throws an error if the operation is not found."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"async getDeployedAddress(waitFinal = false): Promise<string>\n"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the deployed address of a smart contract operation."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"waitFinal"})," (optional): If true, waits for final execution; otherwise, uses speculative execution (default: false)."]}),"\n",(0,s.jsx)(t.li,{children:"Returns: A Promise that resolves to the deployed contract address."}),"\n",(0,s.jsx)(t.li,{children:"Throws an error if no events are received or if there's an execution error."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(6540);const i={},o=s.createContext(i);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);