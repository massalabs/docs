"use strict";(self.webpackChunkdocu_dev=self.webpackChunkdocu_dev||[]).push([[8331],{812:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var t=i(4848),s=i(8453);const o={title:"Server Configuration"},r="Server Configuration",a={id:"deweb/configuration/server-config",title:"Server Configuration",description:"To configure your DeWeb server, create a YAML configuration file named dewebserverconfig.yaml",source:"@site/docs/deweb/configuration/server-config.mdx",sourceDirName:"deweb/configuration",slug:"/deweb/configuration/server-config",permalink:"/docs/deweb/configuration/server-config",draft:!1,unlisted:!1,editUrl:"https://github.com/massalabs/docs/tree/main/docs/deweb/configuration/server-config.mdx",tags:[],version:"current",lastUpdatedBy:"Damir Vodenicarevic",lastUpdatedAt:1723704495e3,frontMatter:{title:"Server Configuration"},sidebar:"massaDeWebSidebar",previous:{title:"Becoming a Provider",permalink:"/docs/deweb/getting-started/setup-public-instance"},next:{title:"DeWeb upload CLI",permalink:"/docs/deweb/cli/overview"}},l={},d=[{value:"Example Configuration",id:"example-configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:2},{value:"Configuration Fields",id:"configuration-fields",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"server-configuration",children:"Server Configuration"})}),"\n",(0,t.jsxs)(n.p,{children:["To configure your DeWeb server, create a YAML configuration file named ",(0,t.jsx)(n.code,{children:"deweb_server_config.yaml"}),"\nand store it alongside the server binary. Below is an example configuration file:"]}),"\n",(0,t.jsx)(n.h2,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'domain: "massa.network"\nnetwork_node_url: "https://buildnet.massa.net/api/v2"\napi_port: 8080\nallow_list:\n  - "allowed-domain"\n  - "123456789abcdef"\nblock_list:\n  - "blocked-domain"\n  - "abcdef123456789"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,t.jsx)(n.p,{children:"If no configuration file is provided, the server will use the following default settings:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'domain: "localhost"\nnetwork_node_url: "https://buildnet.massa.net/api/v2"\napi_port: 8080\n'})}),"\n",(0,t.jsx)(n.h2,{id:"configuration-fields",children:"Configuration Fields"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Domain"}),": The domain the website is running on.\nFor example, set this to ",(0,t.jsx)(n.code,{children:"massa.network"})," if your server is running on ",(0,t.jsx)(n.code,{children:"massa.network"}),".\nThe default value is ",(0,t.jsx)(n.code,{children:"localhost"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NetworkNodeURL"}),": The node DeWeb server will connect to. By default, this is set to ",(0,t.jsx)(n.code,{children:"https://buildnet.massa.net/api/v2"}),".\nYou can use any node address for the JSON public API,\nsuch as those listed in the ",(0,t.jsx)(n.a,{href:"https://docs.massa.net/docs/build/api/jsonrpc",children:"Massa API Documentation"})," (Default port: 33035)."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"The default node address targets the Massa buildnet, once DeWeb is fully ready,\nthe default node address will be updated to target a mainnet node."})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"APIPort"}),": The port the server will run on. The default value is 8080."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"AllowList"}),": A list of domains or smart contract addresses that are explicitly allowed.\nBy default, this list is empty. If specified, only the websites in this list will be accessible."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"BlockList"}),": A list of domains or smart contract addresses that are explicitly blocked.\nBy default, this list is empty. Websites in this list will be inaccessible."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);