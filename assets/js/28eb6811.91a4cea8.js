"use strict";(self.webpackChunkdocu_dev=self.webpackChunkdocu_dev||[]).push([[6952],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function _(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,l=_(e,["components","mdxType","originalType","parentName"]),u=c(t),d=o,m=u["".concat(s,".").concat(d)]||u[d]||p[d]||r;return t?a.createElement(m,i(i({ref:n},l),{},{components:t})):a.createElement(m,i({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=d;var _={};for(var s in n)hasOwnProperty.call(n,s)&&(_[s]=n[s]);_.originalType=e,_[u]="string"==typeof e?e:o,i[1]=_;for(var c=2;c<r;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),o=t(6010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,i),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>k});var a=t(7462),o=t(7294),r=t(6010),i=t(2466),_=t(6550),s=t(1980),c=t(7392),l=t(12);function u(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:o}}=e;return{value:n,label:t,attributes:a,default:o}}))}function p(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??u(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function d(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,_.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(r),(0,o.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=p(e),[i,_]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[s,c]=m({queryString:t,groupId:a}),[u,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,l.Nk)(t);return[a,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),f=(()=>{const e=s??u;return d({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{f&&_(f)}),[f]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);_(e),c(e),b(e)}),[c,b,r]),tabValues:r}}var f=t(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:n,block:t,selectedValue:_,selectValue:s,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),p=e=>{const n=e.currentTarget,t=l.indexOf(n),a=c[t].value;a!==_&&(u(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n)},c.map((e=>{let{value:n,label:t,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:_===n?0:-1,"aria-selected":_===n,key:n,ref:e=>l.push(e),onKeyDown:d,onClick:p},i,{className:(0,r.Z)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":_===n})}),t??n)})))}function y(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function x(e){const n=b(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},o.createElement(h,(0,a.Z)({},e,n)),o.createElement(y,(0,a.Z)({},e,n)))}function k(e){const n=(0,f.Z)();return o.createElement(x,(0,a.Z)({key:String(n)},e))}},3353:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>_,metadata:()=>c,toc:()=>u});var a=t(7462),o=(t(7294),t(3905)),r=t(4866),i=t(5162);const _={id:"all-configs",sidebar_label:"Node and client configuration"},s="Node and client configuration",c={unversionedId:"node/all-configs",id:"node/all-configs",title:"Node and client configuration",description:"Use with caution, overriding some configurations could lead to node",source:"@site/docs/node/all-configs.mdx",sourceDirName:"node",slug:"/node/all-configs",permalink:"/docs/node/all-configs",draft:!1,editUrl:"https://github.com/massalabs/docu-dev/tree/main/docs/node/all-configs.mdx",tags:[],version:"current",lastUpdatedBy:"Damir Vodenicarevic",lastUpdatedAt:1700037058,formattedLastUpdatedAt:"Nov 15, 2023",frontMatter:{id:"all-configs",sidebar_label:"Node and client configuration"},sidebar:"nodeSidebar",previous:{title:"Testnet Staking Rewards Program",permalink:"/docs/node/reward"},next:{title:"Frequently Asked Questions",permalink:"/docs/node/faq"}},l={},u=[{value:"Node configuration",id:"node-configuration",level:2},{value:"Client configuration",id:"client-configuration",level:2}],p={toc:u},d="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"node-and-client-configuration"},"Node and client configuration"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Use with caution, overriding some configurations could lead to node\ninstability and/or a complete desynchronization from Massa blockchain.")),(0,o.kt)("h2",{id:"node-configuration"},"Node configuration"),(0,o.kt)("p",null,"You can override the default configuration via\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"massa-node/config/config.toml")," file."),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"buildnet",label:"\ud83d\udc77 BuildNet",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'[logging]\nlevel = 2\n\n[api]\ndraw_lookahead_period_count = 10\nbind_private = "127.0.0.1:33034"\nbind_public = "0.0.0.0:33035"\nbind_api = "0.0.0.0:33036"\nmax_arguments = 128\nopenrpc_spec_path = "base_config/openrpc.json"\nmax_request_body_size = 52428800\nmax_response_body_size = 52428800\nmax_connections = 100\nmax_subscriptions_per_connection = 1024\nmax_log_length = 4096\nallow_hosts = []\nbatch_request_limit = 16\nping_interval = 60000\nenable_http = true\nenable_ws = true\nenable_broadcast = true\n\n[grpc]\nenabled = true\naccept_http1 = false\nenable_cors = false\nenable_health = true\nenable_reflection = true\nenable_mtls = false\nbind = "0.0.0.0:33037"\naccept_compressed = "Gzip"\nsend_compressed = "Gzip"\nmax_decoding_message_size = 52428800\nmax_encoding_message_size = 52428800\nmax_channel_size = 128\ntimeout = 60\nmax_frame_size = 16777215\nconcurrency_limit_per_connection = 32\nmax_concurrent_streams = 1024\ntcp_nodelay = true\ndraw_lookahead_period_count = 10\nmax_block_ids_per_request = 50\nmax_operation_ids_per_request = 250\nserver_certificate_path = "config/tls/server.pem"\nserver_private_key_path = "config/tls/server.key"\nclient_certificate_authority_root_path = "config/tls/client_ca.pem"\nenable = true\n\n[execution]\nmax_final_events = 10000\nreadonly_queue_length = 10\ncursor_delay = 2000\nstats_time_window_duration = 60000\nmax_read_only_gas = 4294967296\nabi_gas_costs_file = "base_config/gas_costs/abi_gas_costs.json"\nwasm_gas_costs_file = "base_config/gas_costs/wasm_gas_costs.json"\ninitial_vesting_path = "base_config/initial_vesting.json"\nhd_cache_path = "storage/cache/rocks_db"\nlru_cache_size = 200\nhd_cache_size = 2000\nsnip_amount = 10\nbroadcast_slot_execution_output_channel_capacity = 5000\n\n[ledger]\ninitial_ledger_path = "base_config/initial_ledger.json"\ndisk_ledger_path = "storage/ledger/rocks_db"\nfinal_history_length = 100\n\n[consensus]\nmax_discarded_blocks = 100\nmax_future_processing_blocks = 400\nmax_dependency_blocks = 2048\nforce_keep_final_periods_without_ops = 32\nforce_keep_final_periods = 5\nblock_db_prune_interval = 5000\nstats_timespan = 60000\nbroadcast_blocks_headers_channel_capacity = 128\nbroadcast_blocks_channel_capacity = 128\nbroadcast_filled_blocks_channel_capacity = 128\n\n[protocol]\nbind = "[::]:31244"\nconnect_timeout = 3000\nkeypair_file = "config/node_privkey.key"\ninitial_peers_file = "base_config/initial_peers.json"\nread_write_limit_bytes_per_second = 2000000000\nmessage_timeout = 5000\nask_block_timeout = 10000\nmax_known_blocks_size = 1024\nmax_node_known_blocks_size = 1024\nmax_node_wanted_blocks_size = 1024\nmax_simultaneous_ask_blocks_per_node = 128\nmax_send_wait = 0\nmax_known_ops_size = 1000000\nasked_operations_buffer_capacity = 600000\nmax_node_known_ops_size = 200000\nmax_known_endorsements_size = 2048\nmax_node_known_endorsements_size = 2048\noperation_batch_buffer_capacity = 10024\noperation_announcement_buffer_capacity = 2000\noperation_batch_proc_period = 500\noperation_announcement_interval = 300\nmax_operations_per_message = 1024\ntry_connection_timer = 5000\ntimeout_connection = 1000\nmax_ops_kept_for_propagation = 320000\nmax_operations_propagation_time = 32000\nmax_endorsements_propagation_time = 32000\nthread_tester_count = 25\nmax_in_connections = 100\n\n[network]\nroutable_ip = "37.187.156.118"\n\n[metrics]\nenabled = true\nbind = "[::]:31248"\ntick_delay = 5000\n\n[bootstrap]\nbootstrap_list = [ [ "149.202.84.7:31245", "N1kKfgrCveVnosUkxTzaBw5cf9f2cbTvK3R5Ssb2Pf76au8xwmH",], [ "149.202.84.39:31245", "N12sNdL7YwSawpnJrk9XCWDjKbgfNamAobp62AX5qfkgpBkGh2wC",], [ "37.187.156.118:31245", "N1NnuSW48GKGaYZamAVKXfXbbnt3StxWoHpYtBZSJvY9e8U1BTC",],]\nbootstrap_protocol = "Both"\nbootstrap_whitelist_path = "base_config/bootstrap_whitelist.json"\nbootstrap_blacklist_path = "base_config/bootstrap_blacklist.json"\nbind = "[::]:31245"\nconnect_timeout = 15000\nbootstrap_timeout = 1200000\nretry_delay = 60000\nmax_ping = 10000\nread_timeout = 100000\nwrite_timeout = 100000\nread_error_timeout = 200\nwrite_error_timeout = 200\nmax_clock_delta = 5000\ncache_duration = 15000\nmax_simultaneous_bootstraps = 2\nip_list_max_size = 10000\nper_ip_min_interval = 1000\nmax_bytes_read_write = 20000000\n\n[pool]\nmax_operation_pool_size = 500000\nmax_operation_pool_excess_items = 100000\noperation_pool_refresh_interval = 5000\noperation_max_future_start_delay = 50000\nmax_endorsements_pool_size_per_thread = 25000\nmax_item_return_count = 100\nbroadcast_endorsements_channel_capacity = 2000\nbroadcast_operations_channel_capacity = 5000\n\n[selector]\ninitial_rolls_path = "base_config/initial_rolls.json"\n\n[factory]\ninitial_delay = 100\nstaking_wallet_path = "config/staking_wallet.dat"\nstop_production_when_zero_connections = false\n\n[versioning]\nmip_stats_warn_announced_version = 30\n\n[protocol.default_category_info]\ntarget_out_connections = 10\nmax_in_connections_per_ip = 2\nmax_in_connections = 15\nallow_local_peers = false\n\n[protocol.peers_categories.Bootstrap]\ntarget_out_connections = 2\nmax_in_connections_per_ip = 1\nmax_in_connections = 2\nallow_local_peers = false\n\n[protocol.peers_categories.Standard]\ntarget_out_connections = 3\nmax_in_connections_per_ip = 1\nmax_in_connections = 10\nallow_local_peers = false\n\n[protocol.peers_categories.default_category_info]\ntarget_out_connections = 3\nmax_in_connections_per_ip = 1\nmax_in_connections = 10\nallow_local_peers = false\n\n'))),(0,o.kt)(i.Z,{value:"testnet",label:"\ud83e\uddd1\u200d\ud83d\udd2c SecurNet",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'[logging]\nlevel = 2\n\n[api]\ndraw_lookahead_period_count = 10\nbind_private = "127.0.0.1:33034"\nbind_public = "0.0.0.0:33035"\nbind_api = "0.0.0.0:33036"\nmax_arguments = 128\nopenrpc_spec_path = "base_config/openrpc.json"\nmax_request_body_size = 52428800\nmax_response_body_size = 52428800\nmax_connections = 100\nmax_subscriptions_per_connection = 1024\nmax_log_length = 4096\nallow_hosts = []\nbatch_request_limit = 16\nping_interval = 60000\nenable_http = true\nenable_ws = true\nenable_broadcast = false\n\n[execution]\nmax_final_events = 10000\nreadonly_queue_length = 10\ncursor_delay = 2000\nstats_time_window_duration = 60000\nmax_read_only_gas = 4294967295\nabi_gas_costs_file = "base_config/gas_costs/abi_gas_costs.json"\nwasm_gas_costs_file = "base_config/gas_costs/wasm_gas_costs.json"\nhd_cache_path = "storage/cache/rocks_db"\nlru_cache_size = 200\nhd_cache_size = 2000\nsnip_amount = 10\nbroadcast_slot_execution_output_channel_capacity = 5000\n\n[ledger]\ninitial_ledger_path = "base_config/initial_ledger.json"\ndisk_ledger_path = "storage/ledger/rocks_db"\nfinal_history_length = 100\ninitial_deferred_credits_path = "base_config/deferred_credits.json"\n\n[consensus]\nmax_discarded_blocks = 100\nmax_future_processing_blocks = 400\nmax_dependency_blocks = 2048\nforce_keep_final_periods_without_ops = 32\nforce_keep_final_periods = 5\nblock_db_prune_interval = 5000\nstats_timespan = 60000\nbroadcast_blocks_headers_channel_capacity = 128\nbroadcast_blocks_channel_capacity = 128\nbroadcast_filled_blocks_channel_capacity = 128\n\n[protocol]\nbind = "[::]:31244"\nconnect_timeout = 3000\nkeypair_file = "config/node_privkey.key"\ninitial_peers_file = "base_config/initial_peers.json"\nread_write_limit_bytes_per_second = 2000000000\nmessage_timeout = 5000\ntester_timeout = 10000\nask_block_timeout = 10000\nmax_blocks_kept_for_propagation = 300\nmax_block_propagation_time = 40000\nblock_propagation_tick = 1000\nmax_known_blocks_size = 1024\nmax_node_known_blocks_size = 1024\nmax_node_wanted_blocks_size = 1024\nmax_simultaneous_ask_blocks_per_node = 128\nmax_send_wait = 0\nmax_known_ops_size = 1000000\nasked_operations_buffer_capacity = 600000\nmax_node_known_ops_size = 200000\nmax_known_endorsements_size = 2048\nmax_node_known_endorsements_size = 2048\noperation_batch_buffer_capacity = 10024\noperation_announcement_buffer_capacity = 2000\noperation_batch_proc_period = 500\noperation_announcement_interval = 300\nmax_operations_per_message = 5000\ntry_connection_timer = 250\ntry_connection_timer_same_peer = 10000\nunban_everyone_timer = 86400000\ntimeout_connection = 1000\nmax_ops_kept_for_propagation = 320000\nmax_operations_propagation_time = 32000\nmax_endorsements_propagation_time = 32000\nthread_tester_count = 25\nmax_in_connections = 250\ntest_oldest_peer_cooldown = 720000\nrate_limit = 5242880\n\n[network]\n\n[metrics]\nenabled = true\nbind = "[::]:31248"\ntick_delay = 5000\n\n[bootstrap]\nbootstrap_list = [ [ "149.202.86.103:31245", "N12UbyLJDS7zimGWf3LTHe8hYY67RdLke1iDRZqJbQQLHQSKPW8j",], [ "149.202.89.125:31245", "N12vxrYTQzS5TRzxLfFNYxn6PyEsphKWkdqx2mVfEuvJ9sPF43uq",], [ "158.69.120.215:31245", "N12rPDBmpnpnbECeAKDjbmeR19dYjAUwyLzsa8wmYJnkXLCNF28E",], [ "158.69.23.120:31245", "N1XxexKa3XNzvmakNmPawqFrE9Z2NFhfq1AhvV1Qx4zXq5p1Bp9",], [ "198.27.74.5:31245", "N1qxuqNnx9kyAMYxUfsYiv2gQd5viiBX126SzzexEdbbWd2vQKu",], [ "51.75.60.228:31245", "N13Ykon8Zo73PTKMruLViMMtE2rEG646JQ4sCcee2DnopmVM3P5",],]\nbootstrap_protocol = "Both"\nbootstrap_whitelist_path = "base_config/bootstrap_whitelist.json"\nbootstrap_blacklist_path = "base_config/bootstrap_blacklist.json"\nbind = "[::]:31245"\nconnect_timeout = 15000\nbootstrap_timeout = 600000\nretry_delay = 60000\nmax_ping = 10000\nread_timeout = 30000\nwrite_timeout = 30000\nread_error_timeout = 200\nwrite_error_timeout = 200\nmax_clock_delta = 5000\ncache_duration = 15000\nmax_simultaneous_bootstraps = 2\nip_list_max_size = 10000\nper_ip_min_interval = 1000\nrate_limit = 20971520\n\n[pool]\nmax_operation_pool_size = 500000\nmax_operation_pool_excess_items = 100000\noperation_pool_refresh_interval = 5000\noperation_max_future_start_delay = 50000\nmax_endorsements_pool_size_per_thread = 25000\nmax_item_return_count = 100\nbroadcast_endorsements_channel_capacity = 2000\nbroadcast_operations_channel_capacity = 5000\n\n[selector]\ninitial_rolls_path = "base_config/initial_rolls.json"\n\n[factory]\ninitial_delay = 100\nstaking_wallet_path = "config/staking_wallets"\nstop_production_when_zero_connections = true\n\n[versioning]\nmip_stats_warn_announced_version = 30\n\n[grpc.public]\nenabled = true\naccept_http1 = false\nenable_cors = false\nenable_health = true\nenable_reflection = true\nenable_tls = false\nenable_mtls = false\ngenerate_self_signed_certificates = true\nsubject_alt_names = []\nbind = "0.0.0.0:33037"\naccept_compressed = "Gzip"\nsend_compressed = "Gzip"\nmax_decoding_message_size = 52428800\nmax_encoding_message_size = 52428800\nmax_channel_size = 128\ntimeout = 60\nmax_frame_size = 16777215\nconcurrency_limit_per_connection = 32\nmax_concurrent_streams = 1024\nmax_arguments = 128\ntcp_nodelay = true\ndraw_lookahead_period_count = 10\nmax_addresses_per_request = 50\nmax_slot_ranges_per_request = 50\nmax_block_ids_per_request = 50\nmax_endorsement_ids_per_request = 100\nmax_operation_ids_per_request = 250\nmax_datastore_entries_per_request = 128\nmax_filters_per_request = 32\nmax_query_items_per_request = 128\ncertificate_authority_root_path = "config/tls_public_ca.pem"\nserver_certificate_path = "config/tls_public_server.pem"\nserver_private_key_path = "config/tls_public_server.key"\nclient_certificate_authority_root_path = "config/tls_public_client_ca.pem"\nclient_certificate_path = "../massa-client/config/tls_public_client.pem"\nclient_private_key_path = "../massa-client/config/tls_public_client.key"\n\n[grpc.private]\nenabled = true\naccept_http1 = false\nenable_cors = false\nenable_health = true\nenable_reflection = true\nenable_tls = false\nenable_mtls = true\ngenerate_self_signed_certificates = true\nsubject_alt_names = []\nbind = "127.0.0.1:33038"\naccept_compressed = "Gzip"\nsend_compressed = "Gzip"\nmax_decoding_message_size = 52428800\nmax_encoding_message_size = 52428800\nmax_channel_size = 128\ntimeout = 60\nmax_frame_size = 16777215\nconcurrency_limit_per_connection = 32\nmax_concurrent_streams = 1024\nmax_arguments = 128\ntcp_nodelay = true\ndraw_lookahead_period_count = 10\nmax_addresses_per_request = 50\nmax_slot_ranges_per_request = 50\nmax_block_ids_per_request = 50\nmax_endorsement_ids_per_request = 100\nmax_operation_ids_per_request = 250\nmax_datastore_entries_per_request = 128\nmax_filters_per_request = 32\nmax_query_items_per_request = 128\ncertificate_authority_root_path = "config/tls_private_ca.pem"\nserver_certificate_path = "config/tls_private_server.pem"\nserver_private_key_path = "config/tls_private_server.key"\nclient_certificate_authority_root_path = "config/tls_private_client_ca.pem"\nclient_certificate_path = "../massa-client/config/tls_private_client.pem"\nclient_private_key_path = "../massa-client/config/tls_private_client.key"\n\n[protocol.default_category_info]\ntarget_out_connections = 10\nmax_in_connections_per_ip = 2\nmax_in_connections = 15\nallow_local_peers = false\n\n[protocol.peers_categories.Bootstrap]\ntarget_out_connections = 1\nmax_in_connections_per_ip = 1\nmax_in_connections = 1\nallow_local_peers = false\n\n')))),(0,o.kt)("h2",{id:"client-configuration"},"Client configuration"),(0,o.kt)("p",null,"You can override the default configuration via\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"massa-client/config/config.toml")," file."),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"buildnet",label:"\ud83d\udc77 BuildNet",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'history = 10\nhistory_file_path = "config/.massa_history"\ntimeout = 1000\n\n[default_node]\n# The IP of your node. Works both with IPv4 (like 127.0.0.1) and IPv6 (like ::1) addresses, if the node is bound to the correct protocol.\nip = "127.0.0.1"\nprivate_port = 33034\npublic_port = 33035\ngrpc_port = 33037\n\n[client]\n    # maximum size in bytes of a request\n    max_request_body_size = 52428800\n    # request timeout\n    request_timeout = 60000\n    # maximum number of outcoming connections allowed\n    max_concurrent_requests = 100\n    # certificate_store, `Native` or `WebPki`\n    certificate_store = "Native"\n    # JSON-RPC request object id data type, `String` or `Number` \n    id_kind = "Number"\n    # max length for logging for requests and responses. Logs bigger than this limit will be truncated\n    max_log_length = 4096\n    # custom headers passed to the server with every request (default is empty).\n    headers = []\n\n    [client.http]\n        # whether to enable HTTP.\n        enabled = true\n'))),(0,o.kt)(i.Z,{value:"securnet",label:"\ud83e\uddd1\u200d\ud83d\udd2c SecurNet",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'history = 10\nhistory_file_path = "config/.massa_history"\ntimeout = 1000\n\n[default_node]\n# The IP of your node. Works both with IPv4 (like 127.0.0.1) and IPv6 (like ::1) addresses, if the node is bound to the correct protocol.\nip = "127.0.0.1"\nprivate_port = 33034\npublic_port = 33035\ngrpc_public_port = 33037\ngrpc_private_port = 33038\n\n[client]\n    # maximum size in bytes of a request\n    max_request_body_size = 52428800\n    # request timeout\n    request_timeout = 60000\n    # maximum number of outcoming connections allowed\n    max_concurrent_requests = 100\n    # certificate_store, `Native` or `WebPki`\n    certificate_store = "Native"\n    # JSON-RPC request object id data type, `String` or `Number` \n    id_kind = "Number"\n    # max length for logging for requests and responses. Logs bigger than this limit will be truncated\n    max_log_length = 4096\n    # custom headers passed to the server with every request (default is empty).\n    headers = []\n\n    [client.http]\n        # whether to enable HTTP.\n        enabled = true\n')))))}m.isMDXComponent=!0}}]);