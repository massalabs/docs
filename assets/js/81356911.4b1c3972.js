"use strict";(self.webpackChunkdocu_dev=self.webpackChunkdocu_dev||[]).push([[5769],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1968:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={id:"local-network",sidebar_label:"Local network (sandbox)"},l="Local network generation",i={unversionedId:"build/networks-faucets/local-network",id:"build/networks-faucets/local-network",title:"Local network generation",description:"Here, you will learn how to launch a local network with custom settings, initial coins and rolls distribution.",source:"@site/docs/build/networks-faucets/local-network.mdx",sourceDirName:"build/networks-faucets",slug:"/build/networks-faucets/local-network",permalink:"/docs/build/networks-faucets/local-network",draft:!1,editUrl:"https://github.com/massalabs/docs/tree/main/docs/build/networks-faucets/local-network.mdx",tags:[],version:"current",lastUpdatedBy:"Andrei",lastUpdatedAt:1758891102,formattedLastUpdatedAt:"Sep 26, 2025",frontMatter:{id:"local-network",sidebar_label:"Local network (sandbox)"},sidebar:"buildSidebar",previous:{title:"Public networks & Faucets",permalink:"/docs/build/networks-faucets/public-networks"},next:{title:"Providers",permalink:"/docs/build/api/providers"}},s={},c=[],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"local-network-generation"},"Local network generation"),(0,r.kt)("p",null,"Here, you will learn how to launch a local network with custom settings, initial coins and rolls distribution."),(0,r.kt)("p",null,"This may be useful for instance if you want to build and test your integration on the latest version of the nodes."),(0,r.kt)("p",null,"Clone massa:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:massalabs/massa.git\n")),(0,r.kt)("p",null,"Compile it with the sandbox feature enabled:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd massa && cargo build --release --features sandbox\n")),(0,r.kt)("p",null,"Create a keypair in massa-client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd massa-client && cargo run\nwallet_generate_secret_key\n")),(0,r.kt)("p",null,"For the rest of the tutorial we will use theses abbreviations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SECRETK"),": The secret you just generated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PUBK"),": The public key corresponding to SECRETK"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ADDR"),": The address corresponding to PUBK")),(0,r.kt)("p",null,"Setup your node to use the secret you just generated as its public key and staking key:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"modify or create the file ",(0,r.kt)("inlineCode",{parentName:"p"},"massa-node/config/node_privkey.key"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{"secret_key":"SECRETK","public_key":"PUBK"}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"modify the file ",(0,r.kt)("inlineCode",{parentName:"p"},"massa-node/base_config/initial_ledger.json"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "ADDR": {\n        "balance": "80000000",\n        "datastore": [],\n        "bytecode": []\n    }\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"CLEAR and modify the file ",(0,r.kt)("inlineCode",{parentName:"p"},"massa-node/base_config/initial_rolls.json"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "ADDR": 100\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You also have to modify the file ",(0,r.kt)("inlineCode",{parentName:"p"},"massa-client/base_config/config.toml")," to match the same ChainID as a Sandbox node, as it defaults to the Mainnet ChainID of 77658377."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-toml"},"...\nchain_id = 77\n...\n")))),(0,r.kt)("p",null,"You can now launch your node:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd massa-node && cargo run --features sandbox\n")),(0,r.kt)("p",null,"On your client run the following command to add your secret key as staking key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd massa-client && cargo run node_start_staking ADDR\n")),(0,r.kt)("p",null,"The local network and your node will start after 10 seconds. Once it is started, you can interact with it using the CLI\nclient as you would with a node on a public network."))}d.isMDXComponent=!0}}]);