"use strict";(self.webpackChunkdocu_dev=self.webpackChunkdocu_dev||[]).push([[1655],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>N});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var d=a.createContext({}),s=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=s(t.components);return a.createElement(d.Provider,{value:e},t.children)},m="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),m=s(n),c=r,N=m["".concat(d,".").concat(c)]||m[c]||p[c]||l;return n?a.createElement(N,o(o({ref:e},u),{},{components:n})):a.createElement(N,o({ref:e},u))}));function N(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var d in e)hasOwnProperty.call(e,d)&&(i[d]=e[d]);i.originalType=t,i[m]="string"==typeof t?t:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5162:(t,e,n)=>{n.d(e,{Z:()=>o});var a=n(7294),r=n(6010);const l={tabItem:"tabItem_Ymn6"};function o(t){let{children:e,hidden:n,className:o}=t;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:n},e)}},4866:(t,e,n)=>{n.d(e,{Z:()=>y});var a=n(7462),r=n(7294),l=n(6010),o=n(2466),i=n(6550),d=n(1980),s=n(7392),u=n(12);function m(t){return function(t){return r.Children.map(t,(t=>{if(!t||(0,r.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:e,label:n,attributes:a,default:r}}=t;return{value:e,label:n,attributes:a,default:r}}))}function p(t){const{values:e,children:n}=t;return(0,r.useMemo)((()=>{const t=e??m(n);return function(t){const e=(0,s.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,n])}function c(t){let{value:e,tabValues:n}=t;return n.some((t=>t.value===e))}function N(t){let{queryString:e=!1,groupId:n}=t;const a=(0,i.k6)(),l=function(t){let{queryString:e=!1,groupId:n}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d._X)(l),(0,r.useCallback)((t=>{if(!l)return;const e=new URLSearchParams(a.location.search);e.set(l,t),a.replace({...a.location,search:e.toString()})}),[l,a])]}function k(t){const{defaultValue:e,queryString:n=!1,groupId:a}=t,l=p(t),[o,i]=(0,r.useState)((()=>function(t){let{defaultValue:e,tabValues:n}=t;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!c({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=n.find((t=>t.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:e,tabValues:l}))),[d,s]=N({queryString:n,groupId:a}),[m,k]=function(t){let{groupId:e}=t;const n=function(t){return t?`docusaurus.tab.${t}`:null}(e),[a,l]=(0,u.Nk)(n);return[a,(0,r.useCallback)((t=>{n&&l.set(t)}),[n,l])]}({groupId:a}),g=(()=>{const t=d??m;return c({value:t,tabValues:l})?t:null})();(0,r.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((t=>{if(!c({value:t,tabValues:l}))throw new Error(`Can't select invalid tab value=${t}`);i(t),s(t),k(t)}),[s,k,l]),tabValues:l}}var g=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(t){let{className:e,block:n,selectedValue:i,selectValue:d,tabValues:s}=t;const u=[],{blockElementScrollPositionUntilNextRender:m}=(0,o.o5)(),p=t=>{const e=t.currentTarget,n=u.indexOf(e),a=s[n].value;a!==i&&(m(e),d(a))},c=t=>{let e=null;switch(t.key){case"Enter":p(t);break;case"ArrowRight":{const n=u.indexOf(t.currentTarget)+1;e=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(t.currentTarget)-1;e=u[n]??u[u.length-1];break}}e?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},e)},s.map((t=>{let{value:e,label:n,attributes:o}=t;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,key:e,ref:t=>u.push(t),onKeyDown:c,onClick:p},o,{className:(0,l.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":i===e})}),n??e)})))}function h(t){let{lazy:e,children:n,selectedValue:a}=t;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const t=l.find((t=>t.props.value===a));return t?(0,r.cloneElement)(t,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((t,e)=>(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==a}))))}function _(t){const e=k(t);return r.createElement("div",{className:(0,l.Z)("tabs-container",b.tabList)},r.createElement(f,(0,a.Z)({},t,e)),r.createElement(h,(0,a.Z)({},t,e)))}function y(t){const e=(0,g.Z)();return r.createElement(_,(0,a.Z)({key:String(e)},t))}},3272:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>d,default:()=>N,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var a=n(7462),r=(n(7294),n(3905)),l=n(4866),o=n(5162);const i={id:"constants",sidebar_label:"Network constants"},d="Network constants",s={unversionedId:"node/constants",id:"node/constants",title:"Network constants",description:"This page describes the constants governing the behavior of the network and their values (that are the same for all nodes of a given network).",source:"@site/docs/node/constants.mdx",sourceDirName:"node",slug:"/node/constants",permalink:"/docs/node/constants",draft:!1,editUrl:"https://github.com/massalabs/docs/tree/main/docs/node/constants.mdx",tags:[],version:"current",lastUpdatedBy:"Andrei",lastUpdatedAt:1760531512,formattedLastUpdatedAt:"Oct 15, 2025",frontMatter:{id:"constants",sidebar_label:"Network constants"},sidebar:"nodeSidebar",previous:{title:"Node and client configuration",permalink:"/docs/node/all-configs"},next:{title:"Updating a node",permalink:"/docs/node/update"}},u={},m=[{value:"Consensus related constants",id:"consensus-related-constants",level:2},{value:"Execution related constants",id:"execution-related-constants",level:2},{value:"Base constants",id:"base-constants",level:3},{value:"Constants added/updated with MIP-0001",id:"constants-addedupdated-with-mip-0001",level:3},{value:"Network dependant constants",id:"network-dependant-constants",level:2}],p={toc:m},c="wrapper";function N(t){let{components:e,...n}=t;return(0,r.kt)(c,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"network-constants"},"Network constants"),(0,r.kt)("p",null,"This page describes the constants governing the behavior of the network and their values (that are the same for all nodes of a given network).\nThese tables are obtained from the source code of the node, in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/massalabs/massa/blob/MAIN.4.0/massa-models/src/config/constants.rs"},"massa repository"),",\nand are used in various massa projects, for instance:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Smart contract related constants in ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/massalabs/massa-web3/blob/main/src/smartContracts/constants.ts"},"Massa-web3")),(0,r.kt)("li",{parentName:"ul"},"Operation related constants in ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/massalabs/station/blob/main/pkg/node/sendoperation/sendoperation.go#L17"},"Massa Station"))),(0,r.kt)("h2",{id:"consensus-related-constants"},"Consensus related constants"),(0,r.kt)("p",null,"The following constants directly impact the security of the network's consensus."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Constant"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ROLL_PRICE"),(0,r.kt)("td",{parentName:"tr",align:null},"The price of a Roll, in MAS"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"100"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BLOCK_REWARD"),(0,r.kt)("td",{parentName:"tr",align:null},"The max number of MAS created as reward for block and endorsement production"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1.02"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"POS_MISS_RATE_DEACTIVATION_THRESHOLD"),(0,r.kt)("td",{parentName:"tr",align:null},"A staker's roll will auto-sell if they miss more than the given threshold of selected block to produce during a given cycle"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"70%"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"T0"),(0,r.kt)("td",{parentName:"tr",align:null},"Time, in milliseconds, between two periods in the same thread"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"16_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PERIODS_PER_CYCLE"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of periods in a cycle"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"128"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"THREAD_COUNT"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of threads"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"32"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ENDORSEMENT_COUNT"),(0,r.kt)("td",{parentName:"tr",align:null},"The max number of endorsements per block"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"16"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ROLL_COUNT_TO_SLASH_ON_DENUNCIATION"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of roll to remove per denunciation"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_BOOTSTRAP_MESSAGE_SIZE"),(0,r.kt)("td",{parentName:"tr",align:null},"Max message size for bootstrap, in bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"300_000_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VERSIONING_THRESHOLD_TRANSITION_ACCEPTED"),(0,r.kt)("td",{parentName:"tr",align:null},"Threshold of votes to accept a new Massa Improvement Proposal (MIP), considering the latest MIP_STORE_STATS_BLOCK_CONSIDERED blocks"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"75%"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MIP_STORE_STATS_BLOCK_CONSIDERED"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of blocks to consider for votes on a MIP"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1_000"))))),(0,r.kt)("h2",{id:"execution-related-constants"},"Execution related constants"),(0,r.kt)("p",null,"The following constants relate to Massa's execution module, and define ledger storage costs, gas usage and smart contract limitations."),(0,r.kt)("h3",{id:"base-constants"},"Base constants"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Constant"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BURN_ADDRESS"),(0,r.kt)("td",{parentName:"tr",align:null},"Massa address for which nobody knows the associated private key, where you can send funds to in order to burn them."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AU1111111111111111111111111111111112m1s9K"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LEDGER_COST_PER_BYTE"),(0,r.kt)("td",{parentName:"tr",align:null},"The cost, in MAS, to store 1 byte in the ledger"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0.0001"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LEDGER_ENTRY_BASE_COST"),(0,r.kt)("td",{parentName:"tr",align:null},"The cost, in MAS, to create a new address in the ledger"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0.001"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_ASYNC_POOL_LENGTH"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum capacity of the asynchronous messages pool"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_DATASTORE_KEY_LENGTH"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum length of a datastore key, in bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"255"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_DATASTORE_VALUE_LENGTH"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum length of a datastore value, in bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"10_000_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_BYTECODE_LENGTH"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum length of the bytecode of an address, in bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"10_000_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_PARAMETERS_SIZE"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum size of parameters in call SC, in bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"10_000_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_OPERATIONS_PER_BLOCK"),(0,r.kt)("td",{parentName:"tr",align:null},"The max number of operations per block"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"5_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_BLOCK_SIZE"),(0,r.kt)("td",{parentName:"tr",align:null},"The max size of a block, in bytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"300_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_GAS_PER_BLOCK"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum of GAS allowed for a block"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"4_294_967_295"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_ASYNC_GAS"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum of GAS allowed for asynchronous messages execution on one slot"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1_000_000_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ASYNC_MSG_CST_GAS_COST"),(0,r.kt)("td",{parentName:"tr",align:null},"Constant cost applied to asynchronous messages"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"750_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BASE_OPERATION_GAS_COST"),(0,r.kt)("td",{parentName:"tr",align:null},"Gas used by a base operation (transaction, roll buy, roll sell)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"800_000"))))),(0,r.kt)("h3",{id:"constants-addedupdated-with-mip-0001"},"Constants added/updated with MIP-0001"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Constant"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BLOCK_REWARD"),(0,r.kt)("td",{parentName:"tr",align:null},"The max number of MAS created as reward for block and endorsement production, following a community vote to reduce inflation (implemented only if the vote passes)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0.40"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_EVENT_DATA_SIZE"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum size, in bytes, of events emitted"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1_024"),". Before MIP-0001, the limit is ",(0,r.kt)("inlineCode",{parentName:"td"},"50_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_EVENT_PER_OPERATION"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum event number that can be emitted for an operation"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"25"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_RECURSIVE_CALLS_DEPTH"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of recursion for calls"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"25"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DEFERRED_CALL_MAX_FUTURE_SLOTS"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum size of deferred call future slots"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1209600"),", 1 week")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DEFERRED_CALL_MAX_ASYNC_GAS"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum gas for deferred call"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1_000_000_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DEFERRED_CALL_MIN_GAS_COST"),(0,r.kt)("td",{parentName:"tr",align:null},"Deferred call min gas cost"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"10 nanomassa"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DEFERRED_CALL_CST_GAS_COST"),(0,r.kt)("td",{parentName:"tr",align:null},"Deferred call call gas cost"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"750_000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_RUNTIME_MODULE_DEFINED_FUNCTIONS"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of function defined in a smart contract"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"512"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_RUNTIME_MODULE_FUNCTION_ARGS"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of arguments to a function"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"64"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_RUNTIME_MODULE_FUNCTION_RETURN_VALUES"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of value a function can return"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"8"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_RUNTIME_MODULE_FUNCTION_NAME_LEN"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum length for the name of a function defined in a smart contract"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"256"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MAX_RUNTIME_MODULE_FUNCTION_IMPORTS"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of functions a module can import"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"256"))))),(0,r.kt)("h2",{id:"network-dependant-constants"},"Network dependant constants"),(0,r.kt)("p",null,"The following constants directly depend on the network deployed."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"mainnet",label:"\ud83d\udda5 MainNet",default:!0,mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Constant"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GENESIS_TIMESTAMP"),(0,r.kt)("td",{parentName:"tr",align:null},"Unix timestamp (in milliseconds) of the first block of the network"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1705312800000")," Monday, January 15, 2024 10:00:00 AM UTC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VERSION"),(0,r.kt)("td",{parentName:"tr",align:null},"A string representing the network's version"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"MAIN.4.0"')," currently deployed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CHAINID"),(0,r.kt)("td",{parentName:"tr",align:null},"A number representing the network"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"77658377")))))),(0,r.kt)(o.Z,{value:"buildnet",label:"\ud83d\udc77 BuildNet",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Constant"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GENESIS_TIMESTAMP"),(0,r.kt)("td",{parentName:"tr",align:null},"Unix timestamp (in milliseconds) of the first block of the network"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1704289800000")," Wednesday, January 3, 2024 1:50:00 PM UTC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VERSION"),(0,r.kt)("td",{parentName:"tr",align:null},"A string representing the network's version"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"DEVN.29.0"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CHAINID"),(0,r.kt)("td",{parentName:"tr",align:null},"A number representing the network. A signed operation contains the CHAINID, and is only valid on the corresponding network."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"77658366"))))))))}N.isMDXComponent=!0}}]);